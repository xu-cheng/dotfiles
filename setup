#!/usr/bin/env ruby
# rubocop:disable Layout/SpaceAroundOperators, Style/MixinUsage, Style/NumericLiteralPrefix, Lint/MissingCopEnableDirective
# frozen_string_literal: true

require "fileutils"
require "pathname"

def dry_run?
  @dry_run = (ARGV.include?("-d") || ARGV.include?("--dry-run")) if @dry_run.nil?
  @dry_run
end

if dry_run?
  warn "==> Dry run mode."
  include FileUtils::DryRun
else
  include FileUtils::Verbose
end

OS = `uname`.chomp
HOSTNAME = `hostname`.chomp
ROOT = Pathname.new(__dir__).expand_path
DOTFILES_HOME = ROOT/"home"
DOTFILES_OVERWRITE = ROOT/"overwrite"
HOME = Pathname.new(Dir.home)

def overwrite_path(src)
  Pathname.new(src.to_s.sub(DOTFILES_HOME.to_s, DOTFILES_OVERWRITE.to_s))
end

def link_file(src, dst_dir)
  mkdir_p dst_dir unless dst_dir.directory?
  return if src.basename.to_s == ".DS_Store"
  return if src.to_s.start_with?(DOTFILES_HOME.to_s) && overwrite_path(src).exist?

  ln_sf src, dst_dir
end

def link_dir(src_dir, dst_dir, skip_directory: false)
  overwrite_dir = overwrite_path(src_dir)
  files = []
  files += src_dir.children
  files += overwrite_dir.children if overwrite_dir.exist?
  files.sort.each do |file|
    next if skip_directory && file.directory?

    link_file file, dst_dir
  end
end

def clean(dir)
  dir.children.sort.each do |file|
    next if file.exist?
    next unless file.symlink?

    rm file if file.readlink.to_s.start_with? ROOT.to_s
  end
end

# Link files
link_dir DOTFILES_HOME, HOME, skip_directory: true
link_dir DOTFILES_HOME/".config", HOME/".config"
link_dir DOTFILES_HOME/".local/bin", HOME/".local/bin"
link_dir DOTFILES_HOME/".local/share/cargo", HOME/".local/share/cargo"
link_dir DOTFILES_HOME/".ssh", HOME/".ssh"

if OS == "Darwin"
  link_dir DOTFILES_HOME/".gnupg", HOME/".gnupg"
  link_file DOTFILES_HOME/".config/Code/User", HOME/"Library/Application Support/Code"
end

# Cleanup broken symlinks
clean HOME
clean HOME/".config"
clean HOME/".gnupg"
clean HOME/".local/bin"
clean HOME/".local/share/cargo"
clean HOME/".ssh"

# Post linking
chmod 0700, HOME/".ssh"
chmod 0600, (HOME/".ssh/config").realpath
chmod 0700, HOME/".gnupg"
